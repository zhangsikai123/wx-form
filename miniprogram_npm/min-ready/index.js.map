{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["var _ = require('min-util')\nvar is = _.is\n\nvar open = 1\nvar close = 0\n\nmodule.exports = Ctor\n\nfunction Ctor(queueList) {\n\tvar me = this\n\tif (!(me instanceof Ctor)) return new Ctor(queueList)\n\tme.queueList = queueList || []\n\tme.close()\n}\n\nvar proto = Ctor.prototype\n\nproto.queue = function() {\n\tvar me = this\n\tvar args = arguments\n\tif (me.isOpen) {\n\t\tme.exec(args)\n\t} else {\n\t\tme.queueList.push(args)\n\t}\n}\n\nproto.close = function() {\n\tthis.isOpen = false\n}\n\nproto.open = function() {\n\tthis.isOpen = true\n\tthis.execAll()\n}\n\nproto.execAll = function() {\n\tvar me = this\n\tvar queue = me.queueList\n\t_.each(queue, function(args) {\n\t\tme.exec(args)\n\t})\n\tqueue.length = 0\n}\n\nproto.exec = function(args) {\n\tvar func\n\tvar first = _.first(args)\n\tvar ctx = this.ctx\n\tif (is.fn(first)) {\n\t\tfunc = first\n\t} else {\n\t\tfunc = _.get(ctx, first)\n\t}\n\tif (is.fn(func)) {\n\t\ttry {\n\t\t\tfunc.apply(ctx, _.slice(args, 1))\n\t\t} catch (ignore) {}\n\t}\n}\n\nproto.overwriteQueue = function(name) {\n\tvar me = this\n\tglobal[name] = function() {\n\t\tme.queue.apply(me, arguments)\n\t}\n}\n"]}